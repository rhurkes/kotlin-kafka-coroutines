---
version: '3'

networks:
  shared:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "11081:11081"
    environment:
      ZOOKEEPER_CLIENT_PORT: 11081
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.4.0
    hostname: broker
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:11081'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:12092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:12092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG_RETENTION_HOURS: -1
      KAFKA_LOG_RETENTION_BYTES: -1
      KAFKA_CLEANUP_POLICY: "compact"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "false"

      # Uncomment these if you want to do local testing with automatic message cleanup
      # KAFKA_LOG_RETENTION_MS: 5000
      # KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000

  topics_setup:
    image: confluentinc/cp-enterprise-kafka:5.4.0
    hostname: topics
    container_name: topics_setup
    depends_on:
      - zookeeper
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka:12092 1 80 && \
                       echo Waiting a few seconds for topic creation to finish... && \
                       kafka-topics --bootstrap-server kafka:12092 --create --partitions 1 --topic test-topic && \
                       sleep 11 && \
                       tail -f /dev/null'"
